#
# THIS FILE IS GENERATED, PLEASE DO NOT EDIT.
#

# on push to default branch or on tags

name: Temp

on:
  push:
    branches:
      - "ci_test_skip_output_secret"

jobs:
  generate:
    name: Generate output
    outputs:
      tests_image_name: ${{ steps.gen.outputs.tests_image_name }}
    runs-on: "ubuntu-latest"
    steps:
      - name: Generate
        id: gen
#        env:
#          ro_registry: ${{ secrets.DECKHOUSE_DEV_REGISTRY_HOST }}
#          ro_username: ${{ secrets.DECKHOUSE_DEV_REGISTRY_USER }}
#          ro_password: ${{ secrets.DECKHOUSE_DEV_REGISTRY_PASSWORD }}
#          rw_registry: ${{ secrets.DECKHOUSE_REGISTRY_HOST }}
#          rw_username: ${{ secrets.DECKHOUSE_REGISTRY_USER }}
#          rw_password: ${{ secrets.DECKHOUSE_REGISTRY_PASSWORD }}
#          ghcr_username: ${{ secrets.GHCR_IO_REGISTRY_USER }}
#          ghcr_password: ${{ secrets.GHCR_IO_REGISTRY_PASSWORD }}
#          bot_github_token: ${{secrets.BOATSWAIN_GITHUB_TOKEN}}
        run: |
          TESTS_IMAGE_NAME='registry-write.deckhouse.io/deckhouse/fe:c8eb891c44f5ab98e89084e47b9bfce196c91507d846a70d73c15a24-1648645789509'
          echo "Tests image name: '${TESTS_IMAGE_NAME}'" | tr '[:lower:]' '[:upper:]'
          echo "::set-output name=tests_image_name::$(echo ${TESTS_IMAGE_NAME} | base64 -w0)"

          echo encoded:
          echo ====
          echo ${TESTS_IMAGE_NAME} | base64 -w0
          echo ====

  receive:
    name: Recieve output
    needs:
      - generate
    runs-on: "ubuntu-latest"
    steps:
      - name: use secrets
#        env:
#          ro_registry: ${{ secrets.DECKHOUSE_DEV_REGISTRY_HOST }}
#          ro_username: ${{ secrets.DECKHOUSE_DEV_REGISTRY_USER }}
#          ro_password: ${{ secrets.DECKHOUSE_DEV_REGISTRY_PASSWORD }}
#          rw_registry: ${{ secrets.DECKHOUSE_REGISTRY_HOST }}
#          rw_username: ${{ secrets.DECKHOUSE_REGISTRY_USER }}
#          rw_password: ${{ secrets.DECKHOUSE_REGISTRY_PASSWORD }}
#          ghcr_username: ${{ secrets.GHCR_IO_REGISTRY_USER }}
#          ghcr_password: ${{ secrets.GHCR_IO_REGISTRY_PASSWORD }}
#          bot_github_token: ${{secrets.BOATSWAIN_GITHUB_TOKEN}}
        run: |
          exit 0
      - name: Recieve output
        env:
          TESTS_IMAGE_NAME: ${{ needs.generate.outputs.tests_image_name }}
        run: |
          if [[ -z ${TESTS_IMAGE_NAME} ]] ; then
            echo "TESTS_IMAGE_NAME is empty"
            exit 1
          fi

          echo "TESTS_IMAGE_NAME: '$TESTS_IMAGE_NAME'"
          echo Decoded:
          echo $TESTS_IMAGE_NAME | base64 -d
