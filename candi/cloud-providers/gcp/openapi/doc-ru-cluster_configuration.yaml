apiVersions:
- apiVersion: deckhouse.io/v1
  openAPISpec:
    properties:
      subnetworkCIDR:
        description: Подсеть, в которой будут работать узлы кластера.
      sshKey:
        description: Публичный ключ для доступа на узлы под пользователем `user`.
      labels:
        description: |
          Список лейблов, которые будут прикреплены ко всем ресурсам кластера (если они это поддерживают).

          Если поменять лейблы в рабочем кластере, то после применения изменений необходимо пересоздать все машины.

          Подробнее про лейблы можно прочитать [в официальной документации](https://cloud.google.com/resource-manager/docs/creating-managing-labels)
      peeredVPCs:
        description: |
          Список GCP VPC networks, с которыми будет объединена сеть кластера.

          Service Account должен иметь доступ ко всем перечисленным VPC. Если доступа нет, то пиринговое соединение необходимо [настраивать вручную](https://cloud.google.com/vpc/docs/using-vpc-peering#gcloud).
      masterNodeGroup:
        description: Спецификация для описания NodeGroup master-узлов.
        properties:
          replicas:
            description: Количество создаваемых master-узлов.
          additionalNetworkTags:
            description: |
              Список дополнительных тегов.

              Теги, например, позволяют применять к инстансам правила firewall. Подробно про network tags можно прочитать [в официальной документации](https://cloud.google.com/vpc/docs/add-remove-network-tags).
          additionalLabels:
            description: |
              Список дополнительных лейблов.

              Подробно про лейблы можно прочитать [в официальной документации](https://cloud.google.com/resource-manager/docs/creating-managing-labels).
          instanceClass:
            description: Частичное содержимое полей [GCPInstanceClass](https://deckhouse.io/ru/documentation/v1/modules/030-cloud-provider-gcp/cr.html#gcpinstanceclass).
            properties: &instanceClassProperties_ru
              machineType:
                description: |
                  Тип заказываемых инстансов.

                  **Внимание!** Следует убедиться, что указанный тип есть во всех зонах, указанных в `zones`.

                  GCP [позволяет указывать](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) нестандартное количество CPU и RAM, например: `custom-8-40960` или `n2-custom-8-40960`.
              image:
                description: |
                  Образ, который будет использоваться в заказанных инстансах.

                  Список образов можно найти [в документации](https://cloud.google.com/compute/docs/images#ubuntu).

                  **Внимание!** Сейчас поддерживается и тестируется только `Ubuntu 18.04`, `Ubuntu 20.04`, `Centos 7`.
              diskSizeGb:
                description: Размер root-диска. Значение указывается в `ГиБ`.
              disableExternalIP:
                description: |
                  Запрет назначения внешнего IP-адреса для инстанса.

                  Параметр доступен только для схемы размещения `Standard`.
          zones:
            description: Cписок зон, в которых допустимо создавать статичные узлы.
      nodeGroups:
        description: Массив дополнительных NodeGroup для создания статичных узлов (например, для выделенных фронтов или шлюзов).
        items:
          properties:
            name:
              description: |
                Имя NodeGroup.

                Используется для генерации имен узлов.
            replicas:
              description: Количество узлов.
            nodeTemplate:
              description: Настройки Node-объектов в Kubernetes, которые будут добавлены после регистрации узлов.
              properties:
                labels:
                  description: Аналогично стандартному [полю](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#objectmeta-v1-meta) `metadata.labels`.
                annotations:
                  description: Аналогично стандартному [полю](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#objectmeta-v1-meta) `metadata.annotations`.
                taints:
                  description: Аналогично полю `.spec.taints` из объекта [Node](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#taint-v1-core). **Внимание!** Доступны только поля `effect`, `key`, `values`.
            additionalNetworkTags:
              description: |
                Список дополнительных тегов.

                К примеру, теги позволяют применять к инстансам правила firewall. Подробно про network tags можно прочитать [в официальной документации](https://cloud.google.com/vpc/docs/add-remove-network-tags).
            additionalLaddiabels:
              description: |
                Список дополнительных лейблов.

                Подробно про лейблы можно прочитать [в официальной документации](https://cloud.google.com/resource-manager/docs/creating-managing-labels).
            instanceClass:
              description: Частичное содержимое полей [GCPInstanceClass](https://deckhouse.io/ru/documentation/v1/modules/030-cloud-provider-gcp/cr.html#gcpinstanceclass).
              properties:
                <<: *instanceClassProperties_ru
            zones:
              description: Список зон, в которых допустимо создавать узлы.
      layout:
        description: |
          Название схемы размещения.

          [Подробнее](https://deckhouse.io/ru/documentation/v1/modules/030-cloud-provider-gcp/layouts.html) о возможных схемах размещения провайдера.
      standard:
        description: Настройки для схемы размещения `Standard`.
        properties:
          cloudNATAddresses:
            description: Список имен публичных статических IP-адресов для `Cloud NAT`.
      withoutNAT:
        description: Настройки для схемы размещения `WithoutNAT`.
      provider:
        description: Параметры подключения к API GCP.
        properties:
          region:
            description: Имя региона, в котором будут заказываться инстансы.
          serviceAccountJSON:
            description: |
              Ключ к Service Account'у с правами Project Admin (`service account key`) в JSON-формате.

              [Подробнее](https://cloud.google.com/iam/docs/creating-managing-service-account-keys#creating_service_account_keys) о том, как получить `service account key`.
      zones:
        description: Список зон, в которых допустимо создавать узлы.
